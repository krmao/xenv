version: "3.7"

networks:
  service-network:
    name: service-network
# volumes:
#   portainerdata:
#     name: portainerdata

services:

  reverse-proxy:
    # 官方的 Traefik 2.0 Docker 镜像
    image: traefik:v2.0
    # 开启 web UI 并且告诉 Traefik 监听 Docker
    command: --api.insecure=true --providers.docker
    ports:
      # HTTP 端口
      - "80:80"
      # Web UI 端口(通过 --api.insecure=true 启用)
      - "8080:8080"
    volumes:
      # 这样 Traefik 可以监听 Docker 事件
      - /var/run/docker.sock:/var/run/docker.sock
  whoami:
    # 一个通过 API 暴露其 IP 地址的容器
    image: containous/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`test.zhangyongqiao`)"
  # 使用mysql
  service_mysql:
    image: mysql
    restart: always
    container_name: mysql_service
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - service-network
    volumes:
      - ./mysql/conf/my.cnf:/etc/mysql/my.cnf:rw
      - ./data/mysql/data:/var/lib/mysql/:rw
      - ./data/mysql/logs:/var/log/mysql/:rw

  # Redis服务
  service_redis:
    image: redis:latest
    container_name: redis_service
    restart: always
    ports:
      - 6379:6379
    networks:
      - service-network
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:rw
      - ./data/redis:/data:rw
    command:
      /bin/bash -c "redis-server /usr/local/etc/redis/redis.conf "
